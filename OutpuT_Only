It uses a 9 like system to retrieve values.
Then its check them.
//similar work https://www.netlib.org/fdlibm/e_sqrt.c

voyeristic behaviours have fun 
so they say they want the result of a square root of a specific number 
without the use of the square itself even as a small cpu intensive unit process task and the result of it.
So the combination of emvadon tou tetragonou me tin thesi ton 9X! 
exoume to apotelesma pou theloume 
enter the number ,0 ean den mpei 0 as mpei enas arithmos , precision , and logs 
for the fun of us if number is big logs should be turned off 
entering thesi kai emvadon
entering for all the times

for ur number 1325686131564561536845613516
@i 0 with value of 9 and   34160573963816 ^2 ::==   1166944813537343582077281856
@i 1 with value of 18 and   35864987209557 ^2 ::==   1286297307541687205432136249
@i 2 with value of 27 and   35138122569454 ^2 ::==   1234687657705972575053858116
@i 3 with value of 36 and   35637071692242 ^2 ::==   1270000878797996085562986564
@i 4 with value of 45 and   35683452657177 ^2 ::==   1273308793536992301889609329
@i 5 with value of 54 and   35823087120192 ^2 ::==   1283293570820865959854116864
@i 6 with value of 63 and   36197640224745 ^2 ::==   1310269157840077254110315025
@i 7 with value of 72 and   36326668869331 ^2 ::==   1319626871142021993952387561
@i 8 with value of 81 and   36365270203833 ^2 ::==   1322432876997784201367891889
@i 9 with value of 90 and   36392468882937 ^2 ::==   1324411791395537816609745969
@i 10 with value of 99 and   36080912422396 ^2 ::==   1301832241232609988722380816
@i 11 with value of 900 and   36406255977182 ^2 ::==   1325415474276100101704661124
@i 12 with value of 990 and   36399346829479 ^2 ::==   1324912449612702929503411441
@i 13 with value of 999 and   36396423898425 ^2 ::==   1324699672593842474717480625
@i 14 with value of 9000 and   36409548842255 ^2 ::==   1325655246896552410873485025
@i 15 with value of 9900 and   36406911722423 ^2 ::==   1325463221164301252600990929
@i 16 with value of 9990 and   36406568698518 ^2 ::==   1325438244399910620375396324
@i 17 with value of 9999 and   36407100153401 ^2 ::==   1325476941579771117731866801
@i 18 with value of 90000 and   36409969168316 ^2 ::==   1325685854837721712738275856
@i 19 with value of 99000 and   36409612708408 ^2 ::==   1325659897576265337233894464
@i 20 with value of 99900 and   36409840387946 ^2 ::==   1325676477075703727782098916
@i 21 with value of 99990 and   36409918585647 ^2 ::==   1325682171413442836874408609
@i 22 with value of 99999 and   36409706312820 ^2 ::==   1325666713785804559696352400
@i 23 with value of -1 and   0 ^2 ::==   0

the max of them is 36409969168316 with ^2 1325685854837721712738275856
the maximum number of the list is 1325685854837721712738275856
|-------------------------------------------------------------------------
|the maximum possible allowed numbers to use are : 
|number of 36409972968467 with ^2 of 1325686131564497643776330089
|number of 36409972968468 with ^2 of 1325686131564570463722267024
|number of 36409972968469 with ^2 of 1325686131564643283668203961
|-------------------------------------------------------------------------

enter deutero arithmo 
36409972968467
entering emvadon kai .....
enter log level : 
1
first number second number is the qube one dimension and third the precision 

first 1325686131564561536845613516 
     doted 0
     makes 1325686131564561536845613516

second 36409972968467 
     doted 0 
     makes 36409972968467

result 36409972968468 
     doted 0.75482331005194218176884745144517019355134834768251 
     makes 36409972968468.754823310051942181768847451445170194

u can easily almost retrieve the dots digits 

for the integer string 36409972968468.000000
the numbers are 14
the retrievable integer digit is 8

entering with number of 8.7548233100519421817688474514451701935513483476825
recheck values of 36409972968467 and result of 1325686131564497643776330089 with intpart 1325686131564497643776330089

     ----> using 8.7548233100519421817688474514451701935513483476825 rst is 4.3774116550259710908844237257225850967756741738413
     ----> using 4.3774116550259710908844237257225850967756741738413 with intpart 4 and fract 0.37741165502597109088442372572258509677567417384125
                     with combination da_rst 36409972968467.377411655025971090881035593933567895 sq of rst 1325686131564525126872645049.1424391269683837890625
                     with intpart 1325686131564525126872645049 and other part 0.1424391269683837890625
                     the int string is 4.377412

     ----> using 4.3774116550259710908844237257225850967756741738413 rst is 2.1887058275129855454422118628612925483878370869206
     ----> using 2.1887058275129855454422118628612925483878370869206 with intpart 2 and fract 0.18870582751298554544221186286129254838783708692063
                     with combination da_rst 36409972968467.188705827512985545440517796966783948 sq of rst 1325686131564511385324487569.035609722137451171875
                     with intpart 1325686131564511385324487569 and other part 0.035609722137451171875
                     the int string is 2.188706

     ----> using 2.1887058275129855454422118628612925483878370869206 rst is 1.0943529137564927727211059314306462741939185434603
     ----> using 1.0943529137564927727211059314306462741939185434603 with intpart 1 and fract 0.094352913756492772721105931430646274193918543460313
                     with combination da_rst 36409972968467.094352913756492772720258898483391974 sq of rst 1325686131564504514550408829.0089023113250732421875
                     with intpart 1325686131564504514550408829 and other part 0.0089023113250732421875
                     the int string is 1.094353

from new int t  of 8 ---> 7 with 7.7548233100519421817688474514451701935513483476825
     ----> using 7.7548233100519421817688474514451701935513483476825 rst is 3.8774116550259710908844237257225850967756741738413
     ----> using 3.8774116550259710908844237257225850967756741738413 with intpart 3 and fract 0.87741165502597109088442372572258509677567417384125
                     with combination da_rst 36409972968467.877411655025971090881035593933567895 sq of rst 1325686131564561536845613516.7698509693145751953125
                     with intpart 1325686131564561536845613516 and other part 0.7698509693145751953125

     ----> using 7.7548233100519421817688474514451701935513483476825 
     ----> with rst 3.8774116550259710908844237257225850967756741738413 
     ----> the times i run 4
     ----> i just go down :1
     ------------------- found  @--------------------------- 
     for number 1325686131564561536845613516  
     power result is  36409972968467.877411655025971090881035593933567895
     with result of the power * power  1325686131564561536845613516.7698509693145751953125

                     the int string is 3.877412
